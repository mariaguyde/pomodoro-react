{"ast":null,"code":"var _jsxFileName = \"/Users/guydefontgalland/PhpstormProjects/pomodoro/src/index.js\";\n\n/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();*/\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  textAlign: \"center\"\n};\n/*function Demo (props) {\n    return (\n        <div styles={styles}>\n            <h1>Aloha n {props.count}</h1>\n        </div>\n    )\n}*/\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 20,\n      mode: \"Have break, have a KitKat ! \",\n      red: \"\"\n    };\n  }\n\n  compte() {\n    this.setState({\n      count: this.state.count - 1\n    });\n\n    if (this.state.count < 20) {\n      console.log(\"red\");\n    }\n  }\n\n  timer() {\n    this.state.mode = \"Au boulot ! \";\n    setInterval(this.compte.bind(this), 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"- POMODORO -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.timer.bind(this),\n          children: \" Lancer un timer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timer :  \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet count = 1;\nlet text = \"welcome 2\";\nconst rootElt = document.getElementById(\"root\");\nrender( /*#__PURE__*/_jsxDEV(Demo, {\n  count: count,\n  text: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 9\n}, this), rootElt);","map":{"version":3,"sources":["/Users/guydefontgalland/PhpstormProjects/pomodoro/src/index.js"],"names":["React","render","styles","textAlign","Demo","Component","constructor","props","state","count","mode","red","compte","setState","console","log","timer","setInterval","bind","text","rootElt","document","getElementById"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,SAAS,EAAE;AADA,CAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC,EAAP;AAAWC,MAAAA,IAAI,EAAC,8BAAhB;AAAgDC,MAAAA,GAAG,EAAC;AAApD,KAAb;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,SAAKC,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,KAAd;;AAEA,QAAI,KAAKD,KAAL,CAAWC,KAAX,GAAmB,EAAvB,EAA2B;AACvBK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AACJ;;AAEDC,EAAAA,KAAK,GAAG;AACJ,SAAKR,KAAL,CAAWE,IAAX,GAAkB,cAAlB;AACAO,IAAAA,WAAW,CAAC,KAAKL,MAAL,CAAYM,IAAZ,CAAiB,IAAjB,CAAD,EAAyB,IAAzB,CAAX;AACH;;AAEDjB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAEC,MAAZ;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,KAAKc,KAAL,CAAWE,IAAX,CAAgB,IAAhB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA,kBAAI,KAAKV,KAAL,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,gCAAa,KAAKF,KAAL,CAAWC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhC8B;;AAmCnC,IAAIA,KAAK,GAAG,CAAZ;AACA,IAAIU,IAAI,GAAG,WAAX;AACA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB;AACArB,MAAM,eAAE,QAAC,IAAD;AAAM,EAAA,KAAK,EAAEQ,KAAb;AAAoB,EAAA,IAAI,EAAEU;AAA1B;AAAA;AAAA;AAAA;AAAA,QAAF,EAAqCC,OAArC,CAAN","sourcesContent":["/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();*/\n\n\n\n\nimport React from 'react';\nimport {render} from 'react-dom';\n\nconst styles = {\n    textAlign: \"center\"\n}\n\n/*function Demo (props) {\n    return (\n        <div styles={styles}>\n            <h1>Aloha n {props.count}</h1>\n        </div>\n    )\n}*/\n\nclass Demo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {count:20, mode:\"Have break, have a KitKat ! \", red:\"\"};\n    }\n\n    compte() {\n        this.setState({count: this.state.count - 1})\n\n        if (this.state.count < 20) {\n            console.log(\"red\");\n        }\n    }\n\n    timer() {\n        this.state.mode = \"Au boulot ! \"\n        setInterval(this.compte.bind(this), 1000);\n    }\n\n    render() {\n        return (\n            <div style={styles}>\n                <h1>- POMODORO -</h1>\n                <div>\n                    <button onClick={this.timer.bind(this)}> Lancer un timer </button>\n                </div>\n                <p>{this.state.mode}</p>\n                <p></p>\n                <p>Timer :  {this.state.count}</p>\n            </div>\n        )\n    }\n}\n\nlet count = 1;\nlet text = \"welcome 2\";\nconst rootElt = document.getElementById(\"root\");\nrender (<Demo count={count} text={text}/>, rootElt);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}