{"ast":null,"code":"var _jsxFileName = \"/Users/guydefontgalland/PhpstormProjects/pomodoro/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stylesDiv = {\n  height: \"100vh\",\n  backgroundColor: \"#ff03\",\n  paddingTop: \"10px\"\n};\nconst stylesTitle = {\n  textAlign: \"center\",\n  backgroundColor: \"#0000\"\n};\nlet stopTimerStatus = 0;\nlet nbTimerEnclenches = 1; // 1 -> mode travail ; 2 -> mode pause; 3 -> mode travail; 4 -> mode pause\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 25,\n      mode: \"MODE PAUSE : Have break, have a KitKat ! \",\n      red: \"\",\n      temps: \"00:00\"\n    };\n  }\n\n  componentDidMount() {\n    let tempsRestants = this.affichageTemps();\n    this.state.temps = tempsRestants;\n  }\n\n  affichageTemps() {\n    // console.log(nbTimerEnclenches);\n    let minutes = Math.floor(this.state.count / 60);\n    let secondes = this.state.count - minutes * 60;\n\n    function str_pad_left(string, pad, length) {\n      return (new Array(length + 1).join(pad) + string).slice(-length);\n    }\n\n    let tempsRestant = str_pad_left(minutes, '0', 2) + ':' + str_pad_left(secondes, '0', 2); // console.log(tempsRestant);\n\n    this.state.temps = tempsRestant;\n  }\n\n  compte() {\n    // console.log(nbTimerEnclenches);\n\n    /*console.log(this.state.count);\n    let minutes = Math.floor(this.state.count / 60);\n    console.log(minutes);\n    let secondes = this.state.count - minutes * 60;\n    console.log(secondes);\n     function str_pad_left(string,pad,length) {\n        return (new Array(length+1).join(pad)+string).slice(-length);\n    }\n     let tempsRestant = str_pad_left(minutes,'0',2)+':'+str_pad_left(secondes,'0',2);\n    console.log(tempsRestant);\n    this.state.temps = tempsRestant;*/\n    this.affichageTemps();\n\n    if (nbTimerEnclenches % 2 === 0) {\n      console.log(\"tour divisable par 2\");\n      this.state.mode = \"MODE PAUSE : Have break, have a KitKat ! \";\n    } else {\n      this.state.mode = \"MODE TRAVAIL : Au boulot !\";\n    }\n\n    if (stopTimerStatus === 0) {\n      this.setState({\n        count: this.state.count - 1\n      });\n\n      if (this.state.count < 20 && this.state.count !== 0 && this.state.count > 0) {\n        //console.log(\"red\");\n        this.state.red = \"Plus que 20 secondes !\";\n      } else if (this.state.count <= 0) {\n        //this.state.mode = \"MODE PAUSE : Have break, have a KitKat ! \"\n        this.state.red = \"\";\n        nbTimerEnclenches++;\n        stopTimerStatus = 1;\n      }\n    } else if (stopTimerStatus === 1) {\n      this.state.count = 25;\n      stopTimerStatus = 0;\n    }\n  }\n\n  timer() {\n    setInterval(this.compte.bind(this), 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: stylesDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: stylesTitle,\n        children: \" MON PODORO \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.timer.bind(this),\n          children: \" Lancer un timer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.red\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timer : \", this.state.temps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet count = 1;\nlet text = \"welcome 2\";\nconst rootElt = document.getElementById(\"root\");\nrender( /*#__PURE__*/_jsxDEV(Demo, {\n  count: count,\n  text: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 115,\n  columnNumber: 9\n}, this), rootElt);","map":{"version":3,"sources":["/Users/guydefontgalland/PhpstormProjects/pomodoro/src/index.js"],"names":["React","render","stylesDiv","height","backgroundColor","paddingTop","stylesTitle","textAlign","stopTimerStatus","nbTimerEnclenches","Demo","Component","constructor","props","state","count","mode","red","temps","componentDidMount","tempsRestants","affichageTemps","minutes","Math","floor","secondes","str_pad_left","string","pad","length","Array","join","slice","tempsRestant","compte","console","log","setState","timer","setInterval","bind","text","rootElt","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,OADM;AAEdC,EAAAA,eAAe,EAAG,OAFJ;AAGdC,EAAAA,UAAU,EAAG;AAHC,CAAlB;AAMA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,EAAE,QADK;AAEhBH,EAAAA,eAAe,EAAG;AAFF,CAApB;AAMA,IAAII,eAAe,GAAG,CAAtB;AACA,IAAIC,iBAAiB,GAAG,CAAxB,C,CAEA;;AAEA,MAAMC,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC,EAAP;AAAWC,MAAAA,IAAI,EAAC,2CAAhB;AAA6DC,MAAAA,GAAG,EAAC,EAAjE;AAAqEC,MAAAA,KAAK,EAAE;AAA5E,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,aAAa,GAAG,KAAKC,cAAL,EAApB;AACA,SAAKP,KAAL,CAAWI,KAAX,GAAmBE,aAAnB;AACH;;AAEDC,EAAAA,cAAc,GAAI;AACd;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKV,KAAL,CAAWC,KAAX,GAAmB,EAA9B,CAAd;AACA,QAAIU,QAAQ,GAAG,KAAKX,KAAL,CAAWC,KAAX,GAAmBO,OAAO,GAAG,EAA5C;;AAEA,aAASI,YAAT,CAAsBC,MAAtB,EAA6BC,GAA7B,EAAiCC,MAAjC,EAAyC;AACrC,aAAO,CAAC,IAAIC,KAAJ,CAAUD,MAAM,GAAC,CAAjB,EAAoBE,IAApB,CAAyBH,GAAzB,IAA8BD,MAA/B,EAAuCK,KAAvC,CAA6C,CAACH,MAA9C,CAAP;AACH;;AAED,QAAII,YAAY,GAAGP,YAAY,CAACJ,OAAD,EAAS,GAAT,EAAa,CAAb,CAAZ,GAA4B,GAA5B,GAAgCI,YAAY,CAACD,QAAD,EAAU,GAAV,EAAc,CAAd,CAA/D,CATc,CAUd;;AACA,SAAKX,KAAL,CAAWI,KAAX,GAAmBe,YAAnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL;;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIQ,SAAKb,cAAL;;AACA,QAAIZ,iBAAiB,GAAG,CAApB,KAA0B,CAA9B,EAAiC;AAC7B0B,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,WAAKtB,KAAL,CAAWE,IAAX,GAAkB,2CAAlB;AACH,KAHD,MAIK;AACD,WAAKF,KAAL,CAAWE,IAAX,GAAkB,4BAAlB;AAEH;;AAED,QAAIR,eAAe,KAAK,CAAxB,EAA2B;AACvB,WAAK6B,QAAL,CAAc;AAACtB,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAAd;;AAEA,UAAI,KAAKD,KAAL,CAAWC,KAAX,GAAmB,EAAnB,IAAyB,KAAKD,KAAL,CAAWC,KAAX,KAAqB,CAA9C,IAAmD,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CAA1E,EAA6E;AACzE;AACA,aAAKD,KAAL,CAAWG,GAAX,GAAiB,wBAAjB;AACH,OAHD,MAIK,IAAI,KAAKH,KAAL,CAAWC,KAAX,IAAoB,CAAxB,EAA2B;AAC5B;AACA,aAAKD,KAAL,CAAWG,GAAX,GAAgB,EAAhB;AACAR,QAAAA,iBAAiB;AACjBD,QAAAA,eAAe,GAAG,CAAlB;AACH;AACJ,KAbD,MAcK,IAAIA,eAAe,KAAK,CAAxB,EAA2B;AAC5B,WAAKM,KAAL,CAAWC,KAAX,GAAmB,EAAnB;AACAP,MAAAA,eAAe,GAAG,CAAlB;AACH;AACJ;;AAED8B,EAAAA,KAAK,GAAG;AACJC,IAAAA,WAAW,CAAC,KAAKL,MAAL,CAAYM,IAAZ,CAAiB,IAAjB,CAAD,EAAyB,IAAzB,CAAX;AACH;;AAEDvC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA,8BACI;AAAI,QAAA,KAAK,EAAEI,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAE,KAAKgC,KAAL,CAAWE,IAAX,CAAgB,IAAhB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA,kBAAI,KAAK1B,KAAL,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBAAI,KAAKF,KAAL,CAAWG;AAAf;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,+BAAY,KAAKH,KAAL,CAAWI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAxF8B;;AA2FnC,IAAIH,KAAK,GAAG,CAAZ;AACA,IAAI0B,IAAI,GAAG,WAAX;AACA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB;AACA3C,MAAM,eAAE,QAAC,IAAD;AAAM,EAAA,KAAK,EAAEc,KAAb;AAAoB,EAAA,IAAI,EAAE0B;AAA1B;AAAA;AAAA;AAAA;AAAA,QAAF,EAAqCC,OAArC,CAAN","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\n\nconst stylesDiv = {\n    height: \"100vh\",\n    backgroundColor : \"#ff03\",\n    paddingTop : \"10px\"\n}\n\nconst stylesTitle = {\n    textAlign: \"center\",\n    backgroundColor : \"#0000\",\n}\n\n\nlet stopTimerStatus = 0;\nlet nbTimerEnclenches = 1;\n\n// 1 -> mode travail ; 2 -> mode pause; 3 -> mode travail; 4 -> mode pause\n\nclass Demo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {count:25, mode:\"MODE PAUSE : Have break, have a KitKat ! \", red:\"\", temps :\"00:00\"};\n    }\n\n    componentDidMount(){\n        let tempsRestants = this.affichageTemps();\n        this.state.temps = tempsRestants;\n    }\n\n    affichageTemps () {\n        // console.log(nbTimerEnclenches);\n        let minutes = Math.floor(this.state.count / 60);\n        let secondes = this.state.count - minutes * 60;\n\n        function str_pad_left(string,pad,length) {\n            return (new Array(length+1).join(pad)+string).slice(-length);\n        }\n\n        let tempsRestant = str_pad_left(minutes,'0',2)+':'+str_pad_left(secondes,'0',2);\n        // console.log(tempsRestant);\n        this.state.temps = tempsRestant;\n    }\n\n    compte() {\n        // console.log(nbTimerEnclenches);\n        /*console.log(this.state.count);\n        let minutes = Math.floor(this.state.count / 60);\n        console.log(minutes);\n        let secondes = this.state.count - minutes * 60;\n        console.log(secondes);\n\n        function str_pad_left(string,pad,length) {\n            return (new Array(length+1).join(pad)+string).slice(-length);\n        }\n\n        let tempsRestant = str_pad_left(minutes,'0',2)+':'+str_pad_left(secondes,'0',2);\n        console.log(tempsRestant);\n        this.state.temps = tempsRestant;*/\n\n        this.affichageTemps();\n        if (nbTimerEnclenches % 2 === 0) {\n            console.log(\"tour divisable par 2\");\n            this.state.mode = \"MODE PAUSE : Have break, have a KitKat ! \"\n        }\n        else {\n            this.state.mode = \"MODE TRAVAIL : Au boulot !\"\n\n        }\n\n        if (stopTimerStatus === 0) {\n            this.setState({count: this.state.count - 1})\n\n            if (this.state.count < 20 && this.state.count !== 0 && this.state.count > 0) {\n                //console.log(\"red\");\n                this.state.red = \"Plus que 20 secondes !\";\n            }\n            else if (this.state.count <= 0) {\n                //this.state.mode = \"MODE PAUSE : Have break, have a KitKat ! \"\n                this.state.red =\"\";\n                nbTimerEnclenches++;\n                stopTimerStatus = 1;\n            }\n        }\n        else if (stopTimerStatus === 1) {\n            this.state.count = 25;\n            stopTimerStatus = 0;\n        }\n    }\n\n    timer() {\n        setInterval(this.compte.bind(this), 1000);\n    }\n\n    render() {\n        return (\n            <div style={stylesDiv}>\n                <h1 style={stylesTitle} > MON PODORO </h1>\n                <div>\n                    <button onClick={this.timer.bind(this)}> Lancer un timer </button>\n                </div>\n                <p>{this.state.mode}</p>\n                <p>{this.state.red}</p>\n                <p>Timer : {this.state.temps}</p>\n            </div>\n        )\n    }\n}\n\nlet count = 1;\nlet text = \"welcome 2\";\nconst rootElt = document.getElementById(\"root\");\nrender (<Demo count={count} text={text}/>, rootElt);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}